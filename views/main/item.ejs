<%
user = typeof user !== "undefined" ? user :  {};
item = typeof item !== "undefined" ? item : {};

// Create our number formatter.
var formatEur = new Intl.NumberFormat(undefined, {
    style: 'currency',
    currency: 'EUR',

    // These options are needed to round to whole numbers if that's what you want.
    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)
    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)
});
%>

<div id="mySidebar" class="sidebar">
    <a href="#">Sport courts</a>
    <a href="#">Vehicles</a>
    <a href="#">Items</a>
    <a href="#">Services</a>
</div>

<div id="main">
    <div class="content mt-2">
            <div class="row px-2">
                <div class="col">
                    <%- include('../partials/messages'); %>
                </div>
            </div>

        <div class="row py-4 px-2">
            <div class="col-content px-2">
                <div class="">
                    <img src="/uploads/<%= item.image %>" alt="profile picture" width="200px">
                </div>
            </div>
            <div class="col pl-4 pr-0" style="position:relative;">
                <div class="" style="position:absolute;bottom:0;">
                    <h4><%= item.title %></h4>
                    <div class="row">
                        <div class="col-12">
                            <span class="text-secondary"><%= item.shortDesc %></span>
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-12">
                            <span class="text-secondary"><%= item.longDesc %></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 col-md-auto">
                            <i class="fas fa-envelope mr-2"></i>
                            <span class="text-secondary"><%= user.email %></span>
                        </div>
                        <div class="col-12 col-md-auto">
                            <i class="fas fa-phone mr-2"></i>
                            <span class="text-secondary"><%= user.phone %></span>
                        </div>
                        <div class="col-12 col-md-auto">
                            <i class="fas fa-map-marker-alt"></i>
                            <span style="margin-left:4px;" class="text-secondary"><%= `${user.address}, ${user.postalCode} ${user.city}` %></span>
                        </div>
                        <div class="col-12 col-md-auto">
                            <i class="fas fa-euro-sign mr-2"></i>
                            <span class="text-secondary"><%= `${formatEur.format(item.price)}/h` %></span>
                        </div>
                    </div>
                </div>
            </div>

        </div>

<!--        calendar-->

        <form action="/explore/<%= item._id %>/reserve" method="post">

            <!-- Set owner id -->
            <input
                    type="text"
                    id="ownerId"
                    name="ownerId"
                    value="<%= item.ownerId %>"
            />

            <!-- Form inputs that are invisible -->
            <div id="hidden-fields">
            </div>

            <table class="styled-table">
                <thead>
                <tr>
                    <th>Hour\Day</th>
                    <th>Monday</th>
                    <th>Tuesday</th>
                    <th>Wednesday</th>
                    <th>Thursday</th>
                    <th>Friday</th>
                    <th>Saturday</th>
                    <th>Sunday</th>
                </tr>
                </thead>
                <tbody id="reservations-table">
                </tbody>
            </table>

            <button id="resrvSubmitBtn" type="submit" class="btn btn-primary btn-sm">
                Reserve
            </button>
        </form>


    </div>
</div>

<script>
    // Reservations logic
    let slots = [];
    function parseDataToHiddenForm() {
        let bookedSlots = slots.filter(x => x.data( "booked")).map(x => x.data( "time"));

        console.log(bookedSlots);

        let bookedByDay = bookedSlots.reduce((reservations, slot) => {

            let foundDay = reservations.find((findSlot) => slot.day === findSlot.day);

            if (!foundDay) {
                console.log('NOPE')
                reservations.push({ day: slot.day, hours: [slot.hour]})
            } else {
                console.log('YES SIR')
                foundDay.hours = foundDay.hours.concat(slot.hour);
            }
            return reservations;
        }, []);

        let actualReservations = [];
        for(let i = 0; i < bookedByDay.length; i++){
            let dayData = bookedByDay[i];

            let allHoursInString = dayData.hours.reduce((acc, h) => {
                let lastHour = parseInt(acc.split('|').pop().split(',').pop())

                if(lastHour + 1 === h){
                    acc += ',' + h;
                } else {
                    acc += '|' + h;
                }

                return acc;
            }, '');

            let allConsecutiveHours = [];

            let reservationsInDay = allHoursInString.split('|')
            for(let i = 0; i < reservationsInDay.length; i++){
                let consecutiveHours = reservationsInDay[i];

                if(consecutiveHours.length > 0){
                    let allHours = consecutiveHours.split(',');
                    allHours = allHours.map(hour => parseInt(hour));
                    allConsecutiveHours.push(allHours);
                }
            }


            allConsecutiveHours.forEach((hours) => {
                actualReservations.push({ day: dayData.day, hours: hours});
            });

        }
        console.log('REDUCE -> ', actualReservations);

        // get items data
        let item = JSON.parse('<%- JSON.stringify(item) %>');

        // first empty all previously made elements indside hidden inputs div, if there are any
        $('#hidden-fields').empty();

        // Loop over all the actual reservations, and add input fields to form
        for(let i = 0; i < actualReservations.length; i++){
            let resrvData = actualReservations[i];

            let dInput = $('<input>').attr({
                type: 'number',
                id: `day[${i}]`,
                name: `day[${i}]`
            })
            dInput.val(resrvData.day);
            dInput.appendTo('#hidden-fields');

            for(let j = 0; j < resrvData.hours.length; j++){
                console.log('Tako zgledajo ure ------- ',resrvData.hours)
                let hInput = $('<input>').attr({
                    type: 'number',
                    id: `hours[${i}][${j}]`,
                    name: `hours[${i}][${j}]`
                })
                hInput.val(resrvData.hours[j]);
                hInput.appendTo('#hidden-fields');
            }

            let tCInput = $('<input>').attr({
                type: 'number',
                id: `totalCost[${i}]`,
                name: `totalCost[${i}]`
            })
            // set total cost
            let totalCost = 0;
            totalCost = resrvData.hours.length * item.price;
            tCInput.val(totalCost);
            tCInput.appendTo('#hidden-fields');
        }
    }

    // dummy data for testing end developing 2 - trying different schema
    let existingData2 = [
        { day: 2, hours: [12,15,18,19,20], ownerId: '1234' },
        { day: 1, hours: [8,9], ownerId: '1234' }
    ];

    // Make table with clickable table cells
    let table = $("#reservations-table");
    for (let hour = 7; hour < 22; hour++) {
        let tr = $("<tr>")
        for (let day = 0; day < 8; day++) {
            if(day === 0){
                let td = $('<td>');
                td.css({ cursor: "pointer" });
                td.css({ "background-color": "#007bff", color: "white" });
                td.text((hour) + ':00');
                tr.append(td)
            } else {
                let td = $("<td>");
                td.data( "time", {day: day, hour: hour})
                slots.push(td);

                // Booked logic
                let isFree = true;
                if(existingData2.find(r => {
                    return r.day === day && r.hours.includes(hour);
                })){
                    isFree = false;
                }

                if (isFree) {
                    // enable click
                    td.css({ cursor: "pointer" });
                    td.click(function() {
                        td.data( "booked", !td.data( "booked"));
                        td.css({
                            background: td.data( "booked") ? "#8bc98b" : "transparent",
                            color: "#527352"
                        });
                        td.text(td.data("booked") ? "Reserved" : "");

                        parseDataToHiddenForm();
                    });
                } else {
                    // user can't click
                    td.css({ background: "#ccc",
                        color: "#777" });
                    td.text('Not avaliable');
                }
                tr.append(td);
            }
        }
        table.append(tr);
    }
</script>